<div class="flex-1">
    <!-- Main Content -->
    <div class="flex-1 overflow-hidden">
        <!-- Top Navigation -->
        <header class="bg-white shadow-sm">
            <div class="max-w-7xl mx-auto py-4 px-4 sm:px-6 lg:px-8">
                <div class="flex items-center justify-between">
                    <h2 class="text-2xl font-bold leading-7 text-gray-900 sm:text-3xl sm:truncate">
                        Create New Flight
                    </h2>
                    <div class="flex items-center space-x-4">
                        <a href="/admin/flights" class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500">
                            <i class="fas fa-arrow-left mr-2"></i>
                            Back to Flights
                        </a>
                    </div>
                </div>
            </div>
        </header>

        <!-- Create Flight Form -->
        <main class="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
            <div class="bg-white shadow rounded-lg">
                <form id="createFlightForm" class="p-8" onsubmit="handleFlightSubmit(event)">
                    <div class="space-y-8">
                        <!-- Basic Information -->
                        <div>
                            <h3 class="text-lg font-medium leading-6 text-gray-900 mb-6">Basic Information</h3>
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                <div>
                                    <label class="block text-sm font-medium text-gray-700">Flight Number</label>
                                    <input type="text" id="flightNumber" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-red-500 focus:ring-red-500">
                                </div>
                                <div>
                                    <label class="block text-sm font-medium text-gray-700">Airline</label>
                                    <input type="text" id="airline" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-red-500 focus:ring-red-500">
                                </div>
                                <div>
                                    <label class="block text-sm font-medium text-gray-700">Aircraft Type</label>
                                    <input type="text" id="aircraft" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-red-500 focus:ring-red-500">
                                </div>
                                <div>
                                    <label class="block text-sm font-medium text-gray-700">Total Seats</label>
                                    <input type="number" id="seatsAvailable" required min="1" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-red-500 focus:ring-red-500">
                                </div>
                            </div>
                        </div>

                        <!-- Route Information -->
                        <div>
                            <h3 class="text-lg font-medium leading-6 text-gray-900 mb-6">Route Information</h3>
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                <div>
                                    <label class="block text-sm font-medium text-gray-700">From</label>
                                    <input type="text" id="departureCity" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-red-500 focus:ring-red-500" placeholder="City or Airport Code">
                                </div>
                                <div>
                                    <label class="block text-sm font-medium text-gray-700">To</label>
                                    <input type="text" id="arrivalCity" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-red-500 focus:ring-red-500" placeholder="City or Airport Code">
                                </div>
                                <div>
                                    <label class="block text-sm font-medium text-gray-700">Departure Time</label>
                                    <input type="datetime-local" id="departureTime" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-red-500 focus:ring-red-500">
                                </div>
                                <div>
                                    <label class="block text-sm font-medium text-gray-700">Arrival Time</label>
                                    <input type="datetime-local" id="arrivalTime" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-red-500 focus:ring-red-500">
                                </div>
                            </div>
                        </div>

                        <!-- Pricing and Class -->
                        <div>
                            <h3 class="text-lg font-medium leading-6 text-gray-900 mb-6">Pricing and Class</h3>
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                <div>
                                    <label class="block text-sm font-medium text-gray-700">Base Price</label>
                                    <div class="mt-1 relative rounded-md shadow-sm">
                                        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                            <span class="text-gray-500 sm:text-sm">$</span>
                                        </div>
                                        <input type="number" id="price" required min="0" step="0.01" class="pl-7 block w-full rounded-md border-gray-300 shadow-sm focus:border-red-500 focus:ring-red-500">
                                    </div>
                                </div>
                                <div>
                                    <label class="block text-sm font-medium text-gray-700">Class</label>
                                    <select id="class" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-red-500 focus:ring-red-500">
                                        <option value="">Select a class</option>
                                        <option value="economy">Economy</option>
                                        <option value="business">Business</option>
                                        <option value="first">First Class</option>
                                    </select>
                                </div>
                            </div>
                        </div>

                        <!-- Flight Images -->
                        <div>
                            <h3 class="text-lg font-medium leading-6 text-gray-900 mb-6">Flight Images</h3>
                            <div class="mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md">
                                <div class="space-y-1 text-center">
                                    <i class="fas fa-cloud-upload-alt text-gray-400 text-3xl mb-3"></i>
                                    <div class="flex text-sm text-gray-600">
                                        <label for="images" class="relative cursor-pointer bg-white rounded-md font-medium text-red-600 hover:text-red-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-red-500">
                                            <span>Upload files</span>
                                            <input id="images" name="images" type="file" class="sr-only" multiple accept="image/*">
                                        </label>
                                        <p class="pl-1">or drag and drop</p>
                                    </div>
                                    <p class="text-xs text-gray-500">PNG, JPG, GIF up to 5MB</p>
                                    <div id="imagePreview" class="mt-4 grid grid-cols-3 gap-4"></div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Form Actions -->
                    <div class="mt-8 flex justify-end space-x-4">
                        <a href="/admin/flights" class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500">
                            Cancel
                        </a>
                        <button type="submit" class="px-4 py-2 text-sm font-medium text-white bg-red-600 border border-transparent rounded-md shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500">
                            Create Flight
                        </button>
                    </div>
                </form>
            </div>
        </main>
    </div>
</div>

<script>
// Function to handle form submission
async function handleFlightSubmit(event) {
    event.preventDefault();
    
    const formData = new FormData();
    const images = document.getElementById('images').files;
    
    // Add form fields to FormData
    formData.append('flightNumber', document.getElementById('flightNumber').value);
    formData.append('airline', document.getElementById('airline').value);
    formData.append('departureCity', document.getElementById('departureCity').value);
    formData.append('arrivalCity', document.getElementById('arrivalCity').value);
    formData.append('departureTime', document.getElementById('departureTime').value);
    formData.append('arrivalTime', document.getElementById('arrivalTime').value);
    formData.append('price', document.getElementById('price').value);
    formData.append('seatsAvailable', document.getElementById('seatsAvailable').value);
    formData.append('aircraft', document.getElementById('aircraft').value);
    formData.append('class', document.getElementById('class').value);
    
    // Add images to FormData
    for (let i = 0; i < images.length; i++) {
        formData.append('images', images[i]);
    }
    
    try {
        const response = await fetch('/api/admin/flights', {
            method: 'POST',
            body: formData
        });
        
        if (!response.ok) {
            throw new Error('Failed to create flight');
        }
        
        // Redirect to flights page on success
        window.location.href = '/admin/flights';
    } catch (error) {
        console.error('Error creating flight:', error);
        alert('Failed to create flight. Please try again.');
    }
}

// Function to handle image preview
document.getElementById('images').addEventListener('change', function(event) {
    const preview = document.getElementById('imagePreview');
    preview.innerHTML = '';
    
    Array.from(event.target.files).forEach(file => {
        const reader = new FileReader();
        reader.onload = function(e) {
            const div = document.createElement('div');
            div.className = 'relative';
            div.innerHTML = `
                <img src="${e.target.result}" class="w-full h-32 object-cover rounded-lg">
                <button type="button" class="absolute top-0 right-0 -mt-2 -mr-2 bg-red-500 text-white rounded-full p-1 hover:bg-red-600 focus:outline-none">
                    <i class="fas fa-times"></i>
                </button>
            `;
            preview.appendChild(div);
        }
        reader.readAsDataURL(file);
    });
});

// Add validation for departure and arrival times
document.getElementById('arrivalTime').addEventListener('change', function() {
    const departureTime = new Date(document.getElementById('departureTime').value);
    const arrivalTime = new Date(this.value);
    
    if (arrivalTime <= departureTime) {
        alert('Arrival time must be after departure time');
        this.value = '';
    }
});

// Add autocomplete for cities (you can replace this with your own city data)
const cities = [
    'New York', 'London', 'Paris', 'Tokyo', 'Dubai',
    'Singapore', 'Hong Kong', 'Sydney', 'Mumbai', 'Toronto'
];

function setupCityAutocomplete(inputId) {
    const input = document.getElementById(inputId);
    const datalist = document.createElement('datalist');
    datalist.id = inputId + 'List';
    
    cities.forEach(city => {
        const option = document.createElement('option');
        option.value = city;
        datalist.appendChild(option);
    });
    
    input.setAttribute('list', datalist.id);
    document.body.appendChild(datalist);
}

setupCityAutocomplete('departureCity');
setupCityAutocomplete('arrivalCity');
</script>
